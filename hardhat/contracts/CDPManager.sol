pragma solidity >=0.8.0 <0.9.0;

contract CDPManager {
    struct List {
        uint prev;
        uint next;
    }

    struct CDP {
        // Total amount of collateral locked in a CDP
        uint256 lockedCollateral; // [wad]
        // Total amount of debt generated by a CDP
        uint256 generatedDebt; // [wad]
    }

    uint public cdpi;

    mapping(uint => List) public cdpList; // CDPId => Prev & Next CDPIds (double linked list)
    mapping(uint => address) public ownsCDP; // CDPId => Owner
    mapping(address => uint) public firstCDPID; // Owner => First CDPId
    mapping(address => uint) public lastCDPID; // Owner => Last CDPId
    mapping(address => uint) public cdpCount; // Owner => Amount of CDPs

    constructor() {
        cdpi = 0;
    }

    // Open a new cdp for a given _user address.
    function openCDP(address _user) public {
        cdpi = cdpi + 1;
        ownsCDP[cdpi] = _user;

        if (firstCDPID[_user] == 0) {
            firstCDPID[_user] = cdpi;
        }
        if (lastCDPID[_user] != 0) {
            cdpList[cdpi].prev = lastCDPID[_user];
            cdpList[lastCDPID[_user]].next = cdpi;
        }
        lastCDPID[_user] = cdpi;

        cdpCount[_user] = cdpCount[_user]+1;
    }
}
